{"version":3,"sources":["utils/hooks.js","utils/utils.js","utils/regex.js","validations/validations.js","components/Button.jsx","components/Container.jsx","components/Input.jsx","components/Slider.jsx","components/SliderConfigurations.jsx","components/SimuladorDeCredito.jsx","App.js","index.js"],"names":["useCalcularCuotaCon2Decimales","props","number","places","cuota","montoTotal","plazo","useCalculoCuota","Math","round","updateInputAndSliderStatus","valorIngresado","validator","setInput","setValueSlider","hasErrors","valorParseado","parseInt","Number","isNaN","updateFromSlider","valor","setValue","toString","REGEX","NUMEROS","Validator","value","this","length","test","minLength","maxLength","min","max","Button","id","disabled","type","children","Container","className","Input","name","defaultProps","Slider","tipFormatter","Handle","RCSlider","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","SliderMontoTotalConfiguration","defaultValue","included","marks","5000","label","style","color","50000","step","handleStyle","border","dotStyle","width","height","railStyle","borderRadius","SliderPlazoConfiguration","3","24","SliderMontoTotal","SliderPlazo","SimuladorDeCredito","useState","setMontoTotal","setPlazo","inputMontoTotal","setInputMontoTotal","inputPlazo","setInputPlazo","onChange","e","target","isEmptyOrNotNumeric","isLengthString","autoComplete","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c651cdbd.chunk.js","sourcesContent":["import { roundNumberWithPlaces } from \"./utils\";\n\nexport function useCalculoCuota(props) {\n    const { montoTotal, plazo } = props\n    return montoTotal / plazo;\n}\n\nexport function useCalcularCuotaCon2Decimales(props) {\n    const cuota = useCalculoCuota(props)\n    return roundNumberWithPlaces(cuota, 2)\n}\n\n\nexport function updateInputAndSliderStatus(valorIngresado, validator, setInput, setValueSlider) {\n    if (!validator.hasErrors) {\n        const valorParseado = parseInt(valorIngresado)\n        if (Number.isNaN(valorParseado)) {\n            setInput(\"\")\n        }\n        else {\n            setValueSlider(valorParseado)\n            setInput(valorIngresado)\n        }\n    }\n}\n\nexport function updateFromSlider(valor, setValue, setInput) {\n    setValue(valor)\n    setInput(valor.toString())\n}","export function roundNumberWithPlaces(number, places) {\n    return +(Math.round(number + \"e+\" + places)  + \"e-\" + places);\n  }","export const REGEX ={\n    NUMEROS: /^[0-9]+$/\n}","import { REGEX } from \"../utils/regex\"\n\nexport class Validator {\n    constructor(value) {\n        this.value = value\n        this.hasErrors = false\n    }\n\n    isNotEmpty() {\n        if (!this.value) {\n            this.hasErrors = true\n        }\n        return this\n    }\n\n    isEmptyOrNotNumeric() {\n        if(this.value.length > 0 && !REGEX.NUMEROS.test(this.value))\n        {\n            this.hasErrors = true\n        }\n        return this\n    }\n    \n    isLengthString(minLength, maxLength) {\n        if (this.value.length < minLength || this.value.length > maxLength) {\n            this.hasErrors = true\n        }\n\n        return this\n    }\n\n    isLength(minLength, maxLength) {\n        if (!this.value || this.value.length < minLength || this.value.length > maxLength) {\n            this.hasErrors = true\n        }\n\n        return this\n    }\n\n    isNumeric() {\n        if (!this.value || !REGEX.NUMEROS.test(this.value)) {\n            this.hasErrors = true\n        }\n\n        return this\n    }\n\n    esMayorOIgualA(min){\n        if (!this.value || !REGEX.NUMEROS.test(this.value) || this.value < min ) {\n            this.hasErrors = true\n        }\n\n        return this\n    }\n\n    esMenorOIgualA(max){\n        if (!this.value || !REGEX.NUMEROS.test(this.value) || this.value > max ) {\n            this.hasErrors = true\n        }\n\n        return this\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Button = props => {\n    const { id, disabled, type } = props\n    return <>\n        <button id={id} type={type} disabled={disabled} {...props}>{props.children}</button>\n    </>\n};\n\nButton.propTypes = {\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    type: PropTypes.string,\n  };\n\nexport default Button;","import React from 'react'\n\nconst Container = props => {\n    return <div className=\"container\">\n        {props.children}\n    </div>\n};\n\nexport default Container;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n    const { id, name, type, className } = props\n    return <>\n        <input type={type} id={id} name={name} className={className} {...props}></input>\n    </>\n};\n\nInput.defaultProps = {\n    type: \"text\",\n    className: \"\"\n};\n\nInput.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n};\n\nexport default Input;","import RCSlider, { SliderTooltip } from 'rc-slider';\nimport React from 'react';\nimport 'rc-slider/assets/index.css';\n\nconst Slider = (props) => {\n    const {tipFormatter, value} = props\n    const { Handle } = RCSlider;\n\n    const handle = props => {\n        const { dragging, index, ...restProps } = props;\n        return <SliderTooltip\n            prefixCls=\"rc-slider-tooltip\"\n            overlay={tipFormatter(value)}\n            visible={dragging}\n            placement=\"top\"\n            key={index}\n        >\n            <Handle value={value} {...restProps} />\n        </SliderTooltip>\n    };\n\n    return <RCSlider {...props} handle={handle} />\n}\n\nexport default Slider\n\n","import Slider from \"./Slider\"\nimport React from 'react'\n\nconst SliderMontoTotalConfiguration = (props) => {\n    const marksMontoTotal = {\n        5000: { label: \"$5000\", style: { color: \"white\" } },\n        50000: { label: \"$50000\", style: { color: \"white\" } }\n    }\n\n    const handleStyle = { border: \"none\" }\n    const dotStyle = { width: \"0\", height: \"0\", border: \"none\" }\n    const railStyle = { borderRadius: \"unset\" }\n\n    return <Slider\n        min={5000}\n        max={50000}\n        defaultValue={5000}\n        included={false}\n        marks={marksMontoTotal}\n        step={500}\n        tipFormatter={value => `$${value}`}\n        handleStyle={handleStyle}\n        dotStyle={dotStyle}\n        railStyle={railStyle}\n        {...props}\n        />\n}\n\nconst SliderPlazoConfiguration = (props) => {\n    const marksPlazo = {\n        3: { label: 3, style: { color: \"white\" } },\n        24: { label: 24, style: { color: \"white\" } }\n    }\n\n    const handleStyle = { border: \"none\" }\n    const dotStyle = { width: \"0\", height: \"0\", border: \"none\" }\n    const railStyle = { borderRadius: \"unset\" }\n\n    return <Slider\n        min={3}\n        max={24}\n        defaultValue={3}\n        step={1}\n        included={false}\n        marks={marksPlazo}\n        tipFormatter={value => `${value}`}\n        handleStyle={handleStyle}\n        dotStyle={dotStyle}\n        railStyle={railStyle}\n        {...props}\n    />\n}\n\n export const SliderMontoTotal = (props) => {\n    return <SliderMontoTotalConfiguration {...props}/>\n }\n\n export const SliderPlazo = (props) => {\n    return <SliderPlazoConfiguration {...props}/>\n }\n","import React, { useState } from 'react'\nimport { useCalcularCuotaCon2Decimales, updateInputAndSliderStatus, updateFromSlider } from '../utils/hooks'\nimport { Validator } from '../validations/validations'\nimport Button from './Button'\nimport Container from './Container'\nimport Input from './Input'\nimport { SliderMontoTotal, SliderPlazo } from './SliderConfigurations'\n\nconst SimuladorDeCredito = (props) => {\n    const [montoTotal, setMontoTotal] = useState(5000)\n    const [plazo, setPlazo] = useState(3)\n\n    const [inputMontoTotal, setInputMontoTotal] = useState(\"5000\")\n    const [inputPlazo, setInputPlazo] = useState(\"3\")\n\n    const cuota = useCalcularCuotaCon2Decimales({ montoTotal: montoTotal, plazo: plazo })\n\n    const onChangeMontoTotal = (e) => {\n        const valorIngresado = e.target.value\n        const validarMontoTotal = new Validator(valorIngresado).isEmptyOrNotNumeric().isLengthString(0, 5)\n        updateInputAndSliderStatus(valorIngresado, validarMontoTotal, setInputMontoTotal, setMontoTotal)\n    }\n\n    const onChangePlazo = (e) => {\n        const valorIngresado = e.target.value\n        const validarPlazo = new Validator(valorIngresado).isEmptyOrNotNumeric().isLengthString(0, 2)\n        updateInputAndSliderStatus(valorIngresado, validarPlazo, setInputPlazo, setPlazo)\n    }\n\n    const onHandleMontoTotal = (valor) => updateFromSlider(valor, setMontoTotal, setInputMontoTotal)\n\n    const onHandlePlazo = (valor) => updateFromSlider(valor, setPlazo, setInputPlazo)\n\n    /*const onSubmit = () => {\n        const montoTotalAEnviar = new Validator(inputMontoTotal).isNotEmpty().isNumeric().esMayorOIgualA(5000).esMenorOIgualA(50000)\n        const plazoAEnviar = new Validator(inputPlazo).isNotEmpty().isNumeric().esMayorOIgualA(3).esMenorOIgualA(24)\n        if (montoTotalAEnviar.hasErrors || plazoAEnviar.hasErrors) {\n            //Mostrar mensaje de error\n        }\n\n    }*/\n\n    return <Container>\n        <div className=\"subcontainer azul-oscuro\">\n            <Container>\n                <div className=\"item align-items-horizontally-center\">\n                    <h1>Simul&aacute; tu cr&eacute;dito</h1>\n                </div>\n            </Container>\n            <Container>\n                <div className=\"item flg1 ml-50\">\n                    <label>MONTO TOTAL</label>\n                </div>\n                <div className=\"item flg1 mr-50 align-item-end\">\n                    <Input id=\"inputMontoTotal\" name=\"montoTotal\" maxLength=\"5\" onChange={onChangeMontoTotal} autoComplete=\"off\" value={inputMontoTotal}\n                        className=\"input\"></Input>\n                </div>\n            </Container>\n            <div className=\"container mb-50\">\n                <div className=\"fixed-width-slider\">\n                    <SliderMontoTotal onChange={onHandleMontoTotal} value={montoTotal} />\n                </div>\n            </div>\n            <Container>\n                <div className=\"item flg1 ml-50\">\n                    <label>PLAZO</label>\n                </div>\n                <div className=\"item flg1 mr-50 align-item-end\">\n                    <Input id=\"inputPlazo\" name=\"plazo\" maxLength=\"2\" onChange={onChangePlazo} autoComplete=\"off\" value={inputPlazo} className=\"input\"></Input>\n                </div>\n            </Container>\n            <div className=\"container mb-50\">\n                <div className=\"fixed-width-slider\">\n                    <SliderPlazo onChange={onHandlePlazo} value={plazo} />\n                </div>\n            </div>\n            <Container>\n                <div className=\"row\">\n                    <div className=\"azul-oscuro-2 same-line align-items-vertically-center\">\n                        <div className=\"fixed-column\">\n                            <div className=\"text-align-center align-items-vertically-center align-items-horizontally-center\">\n                                <h4>{`CUOTA FIJA POR MES `}</h4>\n                            </div>\n                        </div>\n                        <div className=\"fixed-column\">\n                            <div className=\"text-align-center align-items-vertically-center align-items-horizontally-center\">\n                                <h1 className=\"withoutMargin\">{`$${cuota}`}</h1>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"column\">\n                        <div className=\"fixed-column-3\">\n                            <Button id=\"btnObtenerCredito\" type=\"button\" className=\"btn verde pr-40 pl-40 fit-content-height\">\n                                <h2 className=\"flex\">OBTEN&Eacute; CR&Eacute;DITO</h2>\n                            </Button>\n                        </div>\n                        <div className=\"fixed-column-2\">\n                            <Button id=\"btnVerDetalleDeCuotas\" type=\"button\" className=\"btn azul-claro fit-content-height\">\n                                <h4 className=\"flex\">VER DETALLE DE CUOTAS</h4>\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        </div>\n    </Container>\n\n}\n\nexport default SimuladorDeCredito","import './App.css';\nimport SimuladorDeCredito from './components/SimuladorDeCredito';\n\nfunction App() {\n  return (\n    <SimuladorDeCredito />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}